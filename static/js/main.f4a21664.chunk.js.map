{"version":3,"sources":["componens/Statistics/StatisticsElement.js","componens/Statistics/Statistics.js","componens/FeedbackOptions/FeedbackOptions.js","componens/Section/Section.js","componens/Notification/Notification.js","componens/App.js","utils/buttonsValue.js","index.js"],"names":["StatisticsElement","name","value","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","map","option","key","type","onClick","Section","title","children","Notification","message","defaultProps","btnOptions","Object","values","GOOD","NEUTRAL","BAD","App","state","handleAddFeedback","setState","countTotalFeedback","reduce","point","countPositiveFeedbackPercentage","percentage","Math","floor","this","Component","ReactDOM","render","document","getElementById"],"mappings":"uMAQeA,EANW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAT,OACxB,2BACGD,EADH,KACWC,ICkBEC,EAlBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,oCACE,kBAAC,EAAD,CAAmBP,KAAK,OAAOC,MAAOE,IACtC,kBAAC,EAAD,CAAmBH,KAAK,UAAUC,MAAOG,IACzC,kBAAC,EAAD,CAAmBJ,KAAK,MAAMC,MAAOI,IACrC,kBAAC,EAAD,CAAmBL,KAAK,QAAQC,MAAOK,MACvC,kBAAC,EAAD,CAAmBN,KAAK,WAAWC,MAAOM,QCY/BC,EAnBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,kBAAC,WAAD,KACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,4BACEC,IAAKD,EACLE,KAAK,SACLC,QAAS,kBAAML,EAAgBE,KAE9BA,QCIMI,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,iCACE,4BAAKD,GACJC,ICHCC,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,2BAAIA,IAE1CD,EAAaE,aAAe,CAC1BD,QAAS,eAMID,QCLTG,EAAaC,OAAOC,OCPX,CACbC,KAAM,OACNC,QAAS,UACTC,IAAK,QD+DQC,E,4MAxDbC,MAAQ,CACN1B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPyB,kBAAoB,SAAC7B,GACnB,EAAK8B,UAAS,SAACF,GAAD,sBAAe5B,EAAQ4B,EAAM5B,GAAS,O,EAGtD+B,mBAAqB,WAInB,OAHuBT,OAAOC,OAAO,EAAKK,OACbI,QAAO,SAAC3B,EAAO4B,GAAR,OAAkB5B,EAAQ4B,IAAO,I,EAKvEC,gCAAkC,WAAO,IAC/BhC,EAAS,EAAK0B,MAAd1B,KACJiC,EAAa,EAKjB,OAJIjC,IACFiC,EAAaC,KAAKC,MAAOnC,EAAO,EAAK6B,qBAAwB,MAGzD,GAAN,OAAUI,EAAV,M,uDAGQ,IAAD,EACwBG,KAAKV,MAA5B1B,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAEvB,OACE,6BACE,kBAAC,EAAD,CAASY,MAAM,0BACb,kBAAC,EAAD,CACER,QAASa,EACTZ,gBAAiB6B,KAAKT,qBAG1B,kBAAC,EAAD,CAASb,MAAM,cACZsB,KAAKP,qBACJ,kBAAC,EAAD,CACE7B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOiC,KAAKP,mBACZzB,mBAAoBgC,KAAKJ,kCAG3B,kBAAC,EAAD,CAAcf,QAAQ,4B,GAjDhBoB,aELlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.f4a21664.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst StatisticsElement = ({ name, value }) => (\r\n  <p>\r\n    {name}: {value}\r\n  </p>\r\n);\r\n\r\nexport default StatisticsElement;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport StatisticsElement from \"./StatisticsElement\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <>\r\n    <StatisticsElement name=\"Good\" value={good} />\r\n    <StatisticsElement name=\"Neutral\" value={neutral} />\r\n    <StatisticsElement name=\"Bad\" value={bad} />\r\n    <StatisticsElement name=\"Total\" value={total()} />\r\n    <StatisticsElement name=\"Positive\" value={positivePercentage()} />\r\n  </>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.string.isRequired,\r\n  neutral: PropTypes.string.isRequired,\r\n  bad: PropTypes.string.isRequired,\r\n  total: PropTypes.func.isRequired,\r\n  positivePercentage: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <Fragment>\r\n    {options.map(option => (\r\n      <button\r\n        key={option}\r\n        type=\"button\"\r\n        onClick={() => onLeaveFeedback(option)}\r\n      >\r\n        {option}\r\n      </button>\r\n    ))}\r\n  </Fragment>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n  option: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.any\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\nNotification.defaultProps = {\r\n  message: \"No feedback\"\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string\r\n};\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\nimport Statistics from \"./Statistics/Statistics\";\nimport FeedbackOptions from \"./FeedbackOptions/FeedbackOptions\";\nimport buttonsValue from \"../utils/buttonsValue\";\nimport Section from \"./Section/Section\";\nimport Notification from \"./Notification/Notification\";\n\nconst btnOptions = Object.values(buttonsValue);\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleAddFeedback = (value) => {\n    this.setState((state) => ({ [value]: state[value] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    const ArrOfFeedbacks = Object.values(this.state);\n    const total = ArrOfFeedbacks.reduce((total, point) => total + point, 0);\n\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    let percentage = 0;\n    if (good) {\n      percentage = Math.floor((good / this.countTotalFeedback()) * 100);\n    }\n\n    return `${percentage}%`;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <div>\n        <Section title=\"Please, leave Feedback\">\n          <FeedbackOptions\n            options={btnOptions}\n            onLeaveFeedback={this.handleAddFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback}\n              positivePercentage={this.countPositiveFeedbackPercentage}\n            ></Statistics>\n          ) : (\n            <Notification message=\"No feedback given\"></Notification>\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export default {\r\n  GOOD: \"good\",\r\n  NEUTRAL: \"neutral\",\r\n  BAD: \"bad\"\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./componens/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}